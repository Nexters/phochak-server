spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/phochak
    username: phochak
    password: qpdjrmflftm
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        default_batch_fetch_size: 1000
  redis:
    host: localhost
    port: 6379
    password: qpdjrmflftm
# 카카오 OAUTH 관련 설정
# TODO: 배포 환경별로 분리 필요, 운영에서는 secret key 적용하고 별도로 관리 필요 (애플 로그인이 어떻게 돼있는지 모름)
kakao:
  redirect_uri: http://localhost:8080/v1/user/test/login/kakao_test
  client_id: 28e93f0db1f4c949133b2206f2ea7cd6
  api_url:
    token: https://kauth.kakao.com/oauth/token
    information: https://kapi.kakao.com/v2/user/me

logging:
  level:
    com.nexters.phochak: debug
  slack:
    webhook-uri: "http://localhost:8080/log-callback"
  config: classpath:logback-spring.xml

security:
  jwt:
    token:
      secret-key: 5da7665f9e4ee2fccdcdfb21073dca41d24fdb37830cdc47f487db830731248b1410fb0e75329db38be1d32445bdf6d305b5858e8aa5b0a549f877dc7ea83e55
      access-token-expire-length: 86400000 # 1 day
      refresh-token-expire-length: 604800000 # 1 week

ncp:
  s3:
    end-point: test
    region-name: test
    original-bucket-name: test
    encoded-bucket-name: test
    access-key: test
    secret-key: test

  shorts:
    file-location-prefix-head: test
    file-location-prefix-tail: test
    streaming-url-prefix-head: test
    streaming-url-prefix-tail: test

  thumbnail:
    file-location-prefix-head: test
    file-location-prefix-tail: test
    thumbnail-url-prefix-head: test
    thumbnail-url-prefix-tail: test

feign-client:
  slack:
    report:
      bot-nickname: test
      web-hook-uri: test
